<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="DebugCLang|ARM">
      <Configuration>DebugCLang</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="DebugCLang|x64">
      <Configuration>DebugCLang</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|ARM">
      <Configuration>Debug</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseClang|ARM">
      <Configuration>ReleaseClang</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="ReleaseClang|x64">
      <Configuration>ReleaseClang</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM">
      <Configuration>Release</Configuration>
      <Platform>ARM</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\src\DS18B20\DS18B20.cpp" />
    <ClCompile Include="..\src\e-link\epd4in2.cpp" />
    <ClCompile Include="..\src\e-link\epd7in5b.cpp" />
    <ClCompile Include="..\src\e-link\epdBcm2835.cpp" />
    <ClCompile Include="..\src\e-link\epdWiringPi.cpp" />
    <ClCompile Include="..\src\fonts\KS0108.cpp" />
    <ClCompile Include="..\src\fonts\KS0108\Georgia12.cpp" />
    <ClCompile Include="..\src\fonts\KS0108\Liberation_Mono10.cpp" />
    <ClCompile Include="..\src\fonts\KS0108\Liberation_Mono10Bold.cpp" />
    <ClCompile Include="..\src\fonts\KS0108\Liberation_Mono11Bold.cpp" />
    <ClCompile Include="..\src\fonts\KS0108\Liberation_Mono12.cpp" />
    <ClCompile Include="..\src\fonts\KS0108\Liberation_Mono8.cpp" />
    <ClCompile Include="..\src\fonts\KS0108\Liberation_Mono9.cpp" />
    <ClCompile Include="..\src\fonts\KS0108\Liberation_Mono9Bold.cpp" />
    <ClCompile Include="..\src\lib\pugi\pugixml.cpp">
      <WarningLevel Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">TurnOffAllWarnings</WarningLevel>
      <WarningLevel Condition="'$(Configuration)|$(Platform)'=='Release|x64'">TurnOffAllWarnings</WarningLevel>
      <WarningLevel Condition="'$(Configuration)|$(Platform)'=='ReleaseClang|x64'">TurnOffAllWarnings</WarningLevel>
      <WarningLevel Condition="'$(Configuration)|$(Platform)'=='DebugCLang|x64'">TurnOffAllWarnings</WarningLevel>
    </ClCompile>
    <ClCompile Include="..\src\main.cpp" />
    <ClCompile Include="..\src\painter\Painter.cpp" />
    <ClCompile Include="..\src\painter\PainterFont.cpp" />
    <ClCompile Include="..\src\ping\ping.cpp">
      <WarningLevel Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">TurnOffAllWarnings</WarningLevel>
      <WarningLevel Condition="'$(Configuration)|$(Platform)'=='Release|x64'">TurnOffAllWarnings</WarningLevel>
      <WarningLevel Condition="'$(Configuration)|$(Platform)'=='ReleaseClang|x64'">TurnOffAllWarnings</WarningLevel>
      <WarningLevel Condition="'$(Configuration)|$(Platform)'=='DebugCLang|x64'">TurnOffAllWarnings</WarningLevel>
    </ClCompile>
    <ClCompile Include="..\src\StatusManager.cpp" />
    <ClCompile Include="..\src\StatusPing.cpp" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="..\src\DS18B20\DS18B20.h" />
    <ClInclude Include="..\src\e-link\epdBcm2835.hpp" />
    <ClInclude Include="..\src\e-link\epd4in2.h" />
    <ClInclude Include="..\src\e-link\epd7in5b.hpp" />
    <ClInclude Include="..\src\e-link\epdInterface.hpp" />
    <ClInclude Include="..\src\e-link\epdWiringPi.hpp" />
    <ClInclude Include="..\src\fonts\KS0108.hpp" />
    <ClInclude Include="..\src\lib\pugi\pugiconfig.hpp" />
    <ClInclude Include="..\src\lib\pugi\pugixml.hpp" />
    <ClInclude Include="..\src\painter\FontDef.hpp" />
    <ClInclude Include="..\src\painter\Painter.hpp" />
    <ClInclude Include="..\src\painter\PainterDef.hpp" />
    <ClInclude Include="..\src\painter\PainterFont.hpp" />
    <ClInclude Include="..\src\ping\ping.h" />
    <ClInclude Include="..\src\StatusManager.hpp" />
    <ClInclude Include="..\src\StatusPing.hpp" />
    <ClInclude Include="..\src\Timer.hpp" />
  </ItemGroup>
  <ItemGroup>
    <Xml Include="..\E-LinkStatusConfig.xml" />
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{17212035-e085-42cf-bd40-c3592b7c6098}</ProjectGuid>
    <Keyword>Linux</Keyword>
    <RootNamespace>E_LinkStatus</RootNamespace>
    <MinimumVisualStudioVersion>15.0</MinimumVisualStudioVersion>
    <ApplicationType>Linux</ApplicationType>
    <ApplicationTypeRevision>1.0</ApplicationTypeRevision>
    <TargetLinuxPlatform>Raspberry</TargetLinuxPlatform>
    <LinuxProjectType>{8748239F-558C-44D1-944B-07B09C35B330}</LinuxProjectType>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugCLang|ARM'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugCLang|x64'" Label="Configuration">
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseClang|ARM'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseClang|x64'" Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings" />
  <ImportGroup Label="Shared" />
  <ImportGroup Label="PropertySheets" />
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <IncludePath>c:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\Linux\include\bcm2835\1.55\;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <IncludePath>c:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\Linux\include\bcm2835\1.55\;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugCLang|ARM'">
    <IncludePath>c:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\Linux\include\bcm2835\1.55\;$(IncludePath)</IncludePath>
    <RemoteCCompileToolExe>clang++</RemoteCCompileToolExe>
    <RemoteCppCompileToolExe>clang++</RemoteCppCompileToolExe>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugCLang|x64'">
    <IncludePath>c:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\Linux\include\bcm2835\1.55\;$(IncludePath)</IncludePath>
    <RemoteCCompileToolExe>clang++</RemoteCCompileToolExe>
    <RemoteCppCompileToolExe>clang++</RemoteCppCompileToolExe>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <IncludePath>c:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\Linux\include\bcm2835\1.55\;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <IncludePath>c:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\Linux\include\bcm2835\1.55\;$(IncludePath)</IncludePath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseClang|ARM'">
    <IncludePath>c:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\Linux\include\bcm2835\1.55\;$(IncludePath)</IncludePath>
    <RemoteCCompileToolExe>clang++</RemoteCCompileToolExe>
    <RemoteCppCompileToolExe>clang++</RemoteCppCompileToolExe>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseClang|x64'">
    <IncludePath>c:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\Linux\include\bcm2835\1.55\;$(IncludePath)</IncludePath>
    <RemoteCCompileToolExe>clang++</RemoteCCompileToolExe>
    <RemoteCppCompileToolExe>clang++</RemoteCppCompileToolExe>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <Link>
      <LibraryDependencies>bcm2835;wiringPi;pthread;stdc++fs</LibraryDependencies>
    </Link>
    <RemotePostBuildEvent>
      <Command>
      </Command>
      <Message>export pin 17 using the gpio utility so that we can execute the blink program without sudo</Message>
    </RemotePostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Link>
      <LibraryDependencies>bcm2835;wiringPi;pthread;stdc++fs</LibraryDependencies>
    </Link>
    <RemotePostBuildEvent>
      <Command>
      </Command>
      <Message>export pin 17 using the gpio utility so that we can execute the blink program without sudo</Message>
    </RemotePostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugCLang|ARM'">
    <Link>
      <LibraryDependencies>bcm2835;wiringPi;pthread;stdc++fs</LibraryDependencies>
    </Link>
    <RemotePostBuildEvent>
      <Command>
      </Command>
      <Message>export pin 17 using the gpio utility so that we can execute the blink program without sudo</Message>
    </RemotePostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugCLang|x64'">
    <Link>
      <LibraryDependencies>bcm2835;wiringPi;pthread;stdc++fs</LibraryDependencies>
    </Link>
    <RemotePostBuildEvent>
      <Command>
      </Command>
      <Message>export pin 17 using the gpio utility so that we can execute the blink program without sudo</Message>
    </RemotePostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM'">
    <Link>
      <LibraryDependencies>bcm2835;wiringPi;pthread;stdc++fs</LibraryDependencies>
    </Link>
    <RemotePostBuildEvent>
      <Command>
      </Command>
      <Message>export pin 17 using the gpio utility so that we can execute the blink program without sudo</Message>
    </RemotePostBuildEvent>
    <ClCompile>
      <AdditionalIncludeDirectories>..\;..\src\fonts;..\src\e-link;..\src\painter;..\src\ping;..\src\DS18B20;..\src\lib\pugi;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <CppAdditionalWarning>no-psabi;%(CppAdditionalWarning)</CppAdditionalWarning>
      <CppLanguageStandard>c++1y</CppLanguageStandard>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Link>
      <LibraryDependencies>bcm2835;wiringPi;pthread;stdc++fs</LibraryDependencies>
    </Link>
    <RemotePostBuildEvent>
      <Command>
      </Command>
      <Message>export pin 17 using the gpio utility so that we can execute the blink program without sudo</Message>
    </RemotePostBuildEvent>
    <ClCompile>
      <AdditionalIncludeDirectories>..\;..\src\fonts;..\src\e-link_4in2;..\src\painter;..\src\ping;..\src\DS18B20;..\src\lib\pugi;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <CppAdditionalWarning>no-psabi;%(CppAdditionalWarning)</CppAdditionalWarning>
      <CppLanguageStandard>c++1y</CppLanguageStandard>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseClang|ARM'">
    <Link>
      <LibraryDependencies>bcm2835;wiringPi;pthread;stdc++fs</LibraryDependencies>
    </Link>
    <RemotePostBuildEvent>
      <Command>
      </Command>
      <Message>export pin 17 using the gpio utility so that we can execute the blink program without sudo</Message>
    </RemotePostBuildEvent>
    <ClCompile>
      <AdditionalIncludeDirectories>..\;..\src\fonts;..\src\e-link;..\src\painter;..\src\ping;..\src\DS18B20;..\src\lib\pugi;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <CppAdditionalWarning>%(CppAdditionalWarning)</CppAdditionalWarning>
      <CppLanguageStandard>c++1y</CppLanguageStandard>
      <AdditionalOptions>-Wno-sign-conversion -std=c++17 %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseClang|x64'">
    <Link>
      <LibraryDependencies>bcm2835;wiringPi;pthread;stdc++fs</LibraryDependencies>
    </Link>
    <RemotePostBuildEvent>
      <Command>
      </Command>
      <Message>export pin 17 using the gpio utility so that we can execute the blink program without sudo</Message>
    </RemotePostBuildEvent>
    <ClCompile>
      <AdditionalIncludeDirectories>..\;..\src\fonts;..\src\e-link_4in2;..\src\painter;..\src\ping;..\src\DS18B20;..\src\lib\pugi;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <CppAdditionalWarning>%(CppAdditionalWarning)</CppAdditionalWarning>
      <CppLanguageStandard>c++1y</CppLanguageStandard>
      <AdditionalOptions>-Wno-sign-conversion -std=c++17 %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM'">
    <ClCompile>
      <AdditionalIncludeDirectories>..\;..\src\fonts;..\src\e-link;..\src\painter;..\src\ping;..\src\DS18B20;..\src\lib\pugi;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <CppLanguageStandard>c++1y</CppLanguageStandard>
      <CppAdditionalWarning>no-psabi;%(CppAdditionalWarning)</CppAdditionalWarning>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>..\;..\src\fonts;..\src\e-link_4in2;..\src\painter;..\src\ping;..\src\DS18B20;..\src\lib\pugi;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <CppLanguageStandard>c++1y</CppLanguageStandard>
      <CppAdditionalWarning>no-psabi;%(CppAdditionalWarning)</CppAdditionalWarning>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugCLang|ARM'">
    <ClCompile>
      <AdditionalIncludeDirectories>..\;..\src\fonts;..\src\e-link;..\src\painter;..\src\ping;..\src\DS18B20;..\src\lib\pugi;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <CppAdditionalWarning>
      </CppAdditionalWarning>
      <AdditionalOptions>-Wno-sign-conversion %(AdditionalOptions)</AdditionalOptions>
      <CAdditionalWarning />
      <CppLanguageStandard>c++1y</CppLanguageStandard>
      <CLanguageStandard>c11</CLanguageStandard>
    </ClCompile>
    <Link />
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugCLang|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>..\;..\src\fonts;..\src\e-link_4in2;..\src\painter;..\src\ping;..\src\DS18B20;..\src\lib\pugi;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <CppAdditionalWarning>
      </CppAdditionalWarning>
      <AdditionalOptions>-Wno-sign-conversion %(AdditionalOptions)</AdditionalOptions>
      <CAdditionalWarning>
      </CAdditionalWarning>
      <CppLanguageStandard>c++1y</CppLanguageStandard>
      <CLanguageStandard>c11</CLanguageStandard>
    </ClCompile>
    <Link />
  </ItemDefinitionGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets" />
</Project>